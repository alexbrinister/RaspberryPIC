/** 
 * @file ldr_read_pin.h
 * @author Alex Brinister
 * @brief Header for light-dependent resistor code.
 */

#ifndef __LDR_READ_PIN_H__
#define	__LDR_READ_PIN_H__

#include <xc.h>
#include <stdint.h>

/*
 * ADC result will be stored in an unsigned 16-bit integer.
 * Note that the result is actually 10-bit.
 */ 
typedef uint16_t adc_result_t; /// ADC result type

static const adc_result_t COVERED_VALUE = 830;      /// Covered LDR reading.
static const adc_result_t UNCOVERED_VALUE = 800;    /// Uncovered LDR reading.

static volatile uint16_t shared_adc_value;

#define HIGH    1
#define LOW     0

#define ADC_ON_BIT          ADCON0bits.ADON
#define ADC_GO_BIT          ADCON0bits.ADGO
#define ADC_enable()        ADC_ON_BIT = HIGH;
#define ADC_start_conv()    ADC_GO_BIT = HIGH;

/**
 * @brief Initialize the ADC and enable RC0 as ADC input.
 * 
 * @details Set all the ADC registers necessary for operation. Note that this
 * is inspired by code generated by MCC.
 */
void init_adc();


/**
 * @brief Get the ADC value from the LDR pin.
 */
adc_result_t get_ldr_value();

#endif	/* __LDR_READ_PIN_H__ */
